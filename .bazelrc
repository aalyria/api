# Copyright 2023 Aalyria Technologies, Inc., and its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

##
# Set C++20 as the standard version to use via BAZEL_CXXOPTS environment
# variable, per:
#   - https://github.com/bazelbuild/bazel/blob/master/tools/cpp/unix_cc_configure.bzl
#
# For information on C/C++ compiler warnings see:
#   - https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html
#
# TODO: remove -Wno-deprecated-declarations and live a healthier, happier life.
#
# TODO: remove
#   -Wno-sign-compare (https://github.com/protocolbuffers/protobuf/issues/12432)
# when protobuf builds without it.
#
# TODO: remove
#   -Wno-comment
#   -Wno-class-memaccess
#   -Wno-unused-variable
#   -Wno-unused-function
# when grpc builds without them.
#
# TODO: remove the -Wno-stringop-overflow flag once we upgrade our
# protobuf dep past v3.22.0~ish
# See: https://github.com/protocolbuffers/protobuf/commit/887daf693fa17d7baf7b55b278132a7115beae30
# See: https://github.com/protocolbuffers/protobuf/issues/6419
##
build --action_env=BAZEL_CXXOPTS='-std=c++20:-Wall:-Werror:-Wno-deprecated-declarations:-Wno-sign-compare:-Wno-comment:-Wno-class-memaccess:-Wno-unused-variable:-Wno-unused-function:-Wno-stringop-overflow'
build --features=external_include_paths

# Go 1.20 introduced some changes that can cause unnecessary rebuilds without
# this flag: See https://github.com/bazelbuild/rules_go/issues/3430.
build --experimental_output_directory_naming_scheme=diff_against_baseline

##
# Don't automatically create __init__.py files in the runfiles of
# Python targets.
# See: https://github.com/bazelbuild/bazel/issues/10076
#
# This is motivated by our python proto library targets which produce
# overlapping import paths.
##
build --incompatible_default_to_explicit_init_py

##
# Enable hermetic testing and compilation of Java using a JVM downloaded from a
# remote repository.
##
build --tool_java_runtime_version=remotejdk_17 --java_runtime_version=remotejdk_17

##
# Allow Java constructs compatible with the Java 17 specification.
##
build --tool_java_language_version=17 --java_language_version=17
