// Copyright 2024 Aalyria Technologies, Inc., and its affiliates.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package aalyria.spacetime.api.solver.v1alpha;

import "api/nbi/v1alpha/resources/intent.proto";
import "google/protobuf/empty.proto";
import "google/type/interval.proto";

option java_package = "com.aalyria.spacetime.api.solver.v1alpha";
option go_package = "aalyria.com/spacetime/api/solver/v1alpha";

message SolverIntent {
  // id is a unique identifier representing this intent.
  string id = 1;

  oneof value {
    aalyria.spacetime.api.nbi.v1alpha.resources.LinkIntent link = 2;
    aalyria.spacetime.api.nbi.v1alpha.resources.PathIntent path = 3;
  }

  // The interval over which this intent should be applied.
  optional google.type.Interval interval = 4;

  message ServiceRequestAndIntervals {
    optional string service_request_id = 1;
    repeated google.type.Interval intervals = 2;
  }

  // An annotation indicating the service requests that the intent supports over
  // time.
  repeated ServiceRequestAndIntervals dependent_service_requests = 5;
}

message ApplySolutionRequest {
  repeated SolverIntent intents_to_apply = 1;
  repeated string intents_to_remove = 2;
}

// SolutionIngester is the service that takes a solution composed of zero or
// more solver intents and applies it to the system.
service SolutionIngester {
  rpc Apply(ApplySolutionRequest) returns (google.protobuf.Empty) {}
}
