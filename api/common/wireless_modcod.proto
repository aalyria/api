// Protobuf messages used to model modulation and coding schemes.
//
// Copyright (c) Aalyria Technologies, Inc., and its affiliates.
// Confidential and Proprietary. All rights reserved.

syntax = "proto2";

package minkowski.proto;

option java_package = "com.aalyria.minkowski.proto";
option go_package = "aalyria.com/minkowski/api/common";

// Relates the received C/(N+I) to the effective data-rate resulting from the
// modulation & coding scheme that would likely be used by the modem.
message AdaptiveDataRateTable {
  // Unique ID for this table (e.g., ACM modem config hash).
  optional string id = 3;  // required.

  // Maps a data-rate to the minimum C/(N+I) that is required to maintain it.
  message ChannelStateDataRateMapping {
    // The ratio of the power of the carrier (or signal) at the demod input to
    // the noise power of the signal plus the power of the interfering signals,
    // commonly abbreviated C/(N+I), in units of dB.
    optional double min_carrier_to_noise_plus_interference_db = 1;

    // The layer 2 data rate expected, in bps, based on the channel state
    // information from the receiver that would be sent back to the transmitter.
    optional double tx_data_rate_bps = 2;
  }
  // Steps should be sorted by C/(N+I) in ascending order.
  // protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
  repeated ChannelStateDataRateMapping step = 2;

  // Deprecated (use step).
  message ReceivedSignalLevelDataRateMapping {
    optional double min_received_signal_power_dbw = 1 [deprecated = true];
    optional double tx_data_rate_bps = 2 [deprecated = true];
  }
  repeated ReceivedSignalLevelDataRateMapping steps = 1 [deprecated = true];
}
