// Copyright 2023 Aalyria Technologies, Inc., and its affiliates.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Protobuf messages used to model modulation and coding schemes.

syntax = "proto2";

package aalyria.spacetime.api.common;

option java_package = "com.aalyria.spacetime.api.common";
option go_package = "aalyria.com/spacetime/api/common";

// Relates the received C/(N+I) to the effective data-rate resulting from the
// modulation & coding scheme that would likely be used by the modem.
message AdaptiveDataRateTable {
  // Unique ID for this table (e.g., ACM modem config hash).
  optional string id = 3;  // required.

  // Maps a data-rate to the minimum C/(N+I) that is required to maintain it.
  message CarrierToNoisePlusInterferenceDataRateMapping {
    // The ratio of the power of the carrier (or signal) at the demod input to
    // the noise power of the signal plus the power of the interfering signals,
    // commonly abbreviated C/(N+I), in units of dB.
    optional double min_carrier_to_noise_plus_interference_db = 1;

    // The layer 2 data rate achievable, in bps, provided the receiver receives
    // at least the min_carrier_to_noise_plus_interference_db specified above.
    optional double tx_data_rate_bps = 2;
  }
  // Steps should be sorted by C/(N+I) in ascending order.
  repeated CarrierToNoisePlusInterferenceDataRateMapping
      carrier_to_noise_plus_interference_steps = 2;

  // Maps a data-rate to the minimum received signal power, at the receiver
  // output, that is required to maintain it.
  message ReceivedSignalPowerDataRateMapping {
    optional double min_received_signal_power_dbw = 1;
    optional double tx_data_rate_bps = 2;
  }
  // Prefer using `carrier_to_noise_plus_interference_steps`.
  // This field is used as fallback if
  // `carrier_to_noise_plus_interference_steps` are not provided,
  // or if the receiver does not support CNIR.
  // Steps should be sorted by min_received_signal_power_dbw in ascending order.
  repeated ReceivedSignalPowerDataRateMapping received_signal_power_steps = 1;
}
