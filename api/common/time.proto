// Copyright 2023 Aalyria Technologies, Inc., and its affiliates.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package aalyria.spacetime.api.common;

option java_package = "com.aalyria.spacetime.api.common";
option go_package = "aalyria.com/spacetime/api/common";

// TODO: Migrate to Timestamp.
message DateTime {
  // 'Smeared' microseconds since the Unix epoch. See
  // https://developers.google.com/time/smear.
  optional int64 unix_time_usec = 1;

  optional GpsTime gps_time = 2;
}

// TODO: Migrate to Timestamp.
message GpsTime {
  optional int32 week_number = 1;
  optional int32 second_of_week = 2;
  optional int32 usec = 3;
}

// TODO: Migrate to Duration.
message Duration {
  required int64 microseconds = 1;
}

// Time intervals are half-closed, [start_time, end_time)
// If the start and/or end time are not included, the time interval should
// be interpreted as extending to infinity in that timeline direction.
message TimeInterval {
  optional DateTime start_time = 1;  // closed
  optional DateTime end_time = 2;    // open
}
