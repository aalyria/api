// Copyright 2023 Aalyria Technologies, Inc., and its affiliates.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package aalyria.spacetime.api.common;

import "api/common/wireless_modcod.proto";

option java_package = "com.aalyria.spacetime.api.common";
option go_package = "aalyria.com/spacetime/api/common";

enum ChannelSelectionMethod {
  CHANNEL_SELECTION_METHOD_UNKNOWN = 0;
  AUTONOMOUS_CHANNEL_SELECTION = 1;
  CHANNEL_SELECTION_BY_CONTROLLER = 2;
}

// Models a band whose channels all share the same channel width
// and propagation loss characteristics.
message BandProfile {
  reserved 1, 4 to max;

  // Specifies the channel bandwidth or spacing configuration, in Hz.
  optional uint64 channel_width_hz = 2;

  // This field is used to relate the intended receiver's received signal
  // level (RSL) with the data rate used by this transmitter. This can be used
  // to model fixed or adaptive coding & modulation schemes. The minimum RSL
  // specified in this table will be used to constrain link accessibility.
  optional AdaptiveDataRateTable rate_table = 3;
}
