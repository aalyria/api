// Copyright 2023 Aalyria Technologies, Inc., and its affiliates.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Protobuf messages to model platforms (physical things with geospatial
// coordinates and properties, such as aircraft, satellites, surface vehicles,
// ground stations) and their associated physical-layer communications assets
// (antennas, transmitters, receivers).

syntax = "proto2";

package aalyria.spacetime.api.common;

import "api/common/coordinates.proto";
import "api/common/wireless_transceiver.proto";

option java_package = "com.aalyria.spacetime.api.common";
option go_package = "aalyria.com/spacetime/api/common";

// Models a physical platform with optional communications assets.
message PlatformDefinition {
  reserved 1, 5 to 7, 8, 9, 10, 11, 18 to max;

  // Optional friendly, human-readable strings for UI purposes.
  optional string name = 2;
  optional string type = 12;

  // Root platforms have location translations relative to the center of the
  // Earth and orientation rotations relative to the Earth-Centered-Earth-Fixed
  // (ECEF) reference axes.
  optional Motion coordinates = 14;

  // The coordinates above can be updated through different means, including
  // from sources that the SDN controller can automatically fetch from.  The
  // motion_source signals how updates are nominally to be obtained.
  enum MotionSource {
    UNKNOWN_SOURCE = 0;  // Used for manual updates or other means.
    SPACETRACK_ORG = 1;  // Indicates NORAD TLE updates are to be used.
    FLIGHTRADAR_24 = 2;  // FlightRadar 24 trajectory updates are used.
  }
  optional MotionSource motion_source = 16;

  // A string identifier indicating the `MotionDefinition` ID to be used for
  // the description of this platform's motion.
  //
  // If present, this supersedes any supplied `coordinates` message.
  //
  // Using a separate `MotionDefinition` is recommended whenever the motion
  // is likely to be updated over time and/or have multiple different types
  // of pre-planned motion (e.g. a fixed position on a launch pad, followed by
  // a launch maneuver, followed by a TLE, etc).
  optional string motion_ref_id = 4;

  // Transceiver models associated with this platform.
  // Multiple physical devices on the platform may share the same model.
  repeated TransceiverModel transceiver_model = 15;

  // Automatic dependent surveillanceâ€”broadcast (ADS-B) information.
  // This field is optional and is only relevant to aircraft platforms.
  optional AdsbTransponder adsb_transponder = 13;

  // If the motion_source inticates that updated TLEs will come from a 
  // 3rd-party, then the norad_id indicates the NORAD satellite catalog 
  // number that will be used for reference.
  // If the platform owner provides their own higher-precision updates instead,
  // then this field does not need to be set, and will have no effect if it is
  // present.
  optional uint32 norad_id = 17;
}

// Models information from an ADS-B transponder.
message AdsbTransponder {
  reserved 3 to max;

  optional uint32 icao_aircraft_address = 1;
  optional string aircraft_identification = 2;
}
